"""
Objection-Agent
───────────────
•  Возвращает готовый ответ для клиента, построенный по методике
   «6 треугольников» (Agreement → Compliment → “Вот почему” → Logic →
   Question-obviousness → Close).
•  Если возражение совпадает с одним из шаблонов ― использует готовый
   текст; иначе генерирует ответ по той же структуре.

Шаблоны адаптированы под продажи ASIC-оборудования.
"""

from langchain.memory import CombinedMemory
from langchain_openai import ChatOpenAI
from langchain.chains import LLMChain
from langchain_core.prompts import ChatPromptTemplate
from langchain.agents import AgentExecutor

# ──────────────────────────────────────────────────────────────
# 1. Готовые шаблоны («триггер» → 6-блоков)
# ──────────────────────────────────────────────────────────────
TEMPLATES = [
    {
        "triggers": ["свои поставщики", "уже есть поставщик", "работаю с другим"],
        "steps": [
            "Согласна, важно иметь надёжных партнёров, которым доверяешь.",
            "Здорово, что вы относитесь к выбору поставщиков так ответственно — это показатель сильного бизнеса.",
            "Именно поэтому я и пишу: мы можем стать для вас дополнительным каналом, который подстрахует основные поставки.",
            "У нас прямые контракты с Bitmain и WhatsMiner, поэтому сможем держать цену и сроки даже в пиковых партиях.",
            "Согласитесь, иметь альтернативу, которая экономит деньги и время, никогда не помешает?",
            "Давайте протестируем: начнём с небольшой закупки — если всё ок, возьмёте нас в «лист А». Подходит?"
        ],
    },
    {
        "triggers": ["далеко", "доставка долго", "ждать"],
        "steps": [
            "Понимаю: скорость поставки критична для окупаемости фермы.",
            "Вы явно заботитесь о ROI своего оборудования, и это отличный подход.",
            "Именно поэтому мы держим склад в Москве и отправляем в день оплаты.",
            "Средний транзит до Екатеринбурга — 2 дня, до Новосибирска — 4 дня курьером СДЭК, трекинг — онлайн.",
            "Согласитесь, 2-4 дня ожидания перекрываются гарантией оригинала и ценой ниже местных реселлеров?",
            "Предлагаю начать с одной единицы — убедитесь в сроках лично. Готовы попробовать?"
        ],
    },
    {
        "triggers": ["хочу потрогать", "образцы", "посмотреть вживую"],
        "steps": [
            "Логично, перед покупкой хочется «пощупать» устройство.",
            "Тот факт, что вы обращаете внимание на детали, показывает ваш профессионализм.",
            "Именно поэтому мы держим демо-зал в Москве и делаем детальные 4K-видео каждой модели.",
            "В роликах показываем шум в дБ, тепловизором — температурный профиль; также можем устроить онлайн-демо по Zoom.",
            "Согласитесь, видео с реальной розетки + онлайн-замеры дают почти тот же «hands-on» эффект?",
            "Запишу вас на короткий Zoom-обзор — 15 мин: покажем шумомер и Watt-метр. Удобно сегодня в 15:00?"
        ],
    },
    {
        "triggers": ["через агентов", "мой агент займётся", "работаю через посредника"],
        "steps": [
            "Понимаю, агент снимает с вас часть рутины.",
            "То, что вы оптимизируете процессы, говорит о грамотном управлении.",
            "Именно поэтому мы предлагаем схему: ваш агент оформляет заказ, а вы всё равно получаете цену «первой руки».",
            "Мы сами выросли из посредников и знаем их боли: прозрачная маржа, быстрые отгрузки и «не подвести клиента».",
            "Согласитесь, получать прямую цену и сервис от производителя — плюс и для вас, и для агента?",
            "Давайте подключим вашего агента к нашему порталу и дадим ему персональный прайс-лист. Как его e-mail?"
        ],
    },
    {
        "triggers": ["гарантии", "приедет не то", "боюсь брак"],
        "steps": [
            "Справедливый вопрос — гарантия важнее цены, когда речь о капексе.",
            "Приятно, что вы рассматриваете риски заранее — так поступают сильные инвесторы.",
            "Именно поэтому мы даём 12 мес. сервис-гарантии или 6 мес. + 5 % скидки.",
            "90 % наших клиентов говорят, что фактический хэшрейт выше заявленного, а неисправности < 1 %. При любом дефекте: обмен за наш счёт в 72 ч.",
            "Согласитесь, мало кто на рынке берёт на себя полную логистику RMA?",
            "Готовы оформить первую партию с бесплатной страховкой доставки?"
        ],
    },
]

# ──────────────────────────────────────────────────────────────
# 2. System-prompt: инструкция + шаблоны
# ──────────────────────────────────────────────────────────────
SYSTEM_PROMPT = """
Ты — эксперт по работе с возражениями.  
Отвечай кратко (до 6 предложений), дружелюбно, по схеме «6 треугольников»:
1) Согласие   2) Комплимент   3) «Именно поэтому»  
4) Логическое обоснование   5) Вопрос-очевидность   6) Закрытие сделки.

Готовые шаблоны (используй если триггер совпадает с фразой клиента):

{templates}

Если ни один триггер не совпал, придумай ответ по той же схеме для новой темы.
""".strip().replace("{templates}", "\n\n".join(
    f"- **{' / '.join(t['triggers'])}** → {' | '.join(t['steps'])}"
    for t in TEMPLATES
))

PROMPT = ChatPromptTemplate.from_messages(
    [
        ("system", SYSTEM_PROMPT),
        ("human", "{input}")
    ]
)


# ──────────────────────────────────────────────────────────────
# 3. Builder
# ──────────────────────────────────────────────────────────────
def build(shared: CombinedMemory, llm: ChatOpenAI) -> AgentExecutor:
    chain = LLMChain(llm=llm, prompt=PROMPT, memory=shared, verbose=True)
    return AgentExecutor(agent=chain, tools=[], memory=shared, verbose=True)
